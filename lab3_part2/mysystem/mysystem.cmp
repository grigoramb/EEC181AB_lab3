	component mysystem is
		port (
			clk_clk                          : in    std_logic                     := 'X';             -- clk
			memory_mem_a                     : out   std_logic_vector(12 downto 0);                    -- mem_a
			memory_mem_ba                    : out   std_logic_vector(2 downto 0);                     -- mem_ba
			memory_mem_ck                    : out   std_logic;                                        -- mem_ck
			memory_mem_ck_n                  : out   std_logic;                                        -- mem_ck_n
			memory_mem_cke                   : out   std_logic;                                        -- mem_cke
			memory_mem_cs_n                  : out   std_logic;                                        -- mem_cs_n
			memory_mem_ras_n                 : out   std_logic;                                        -- mem_ras_n
			memory_mem_cas_n                 : out   std_logic;                                        -- mem_cas_n
			memory_mem_we_n                  : out   std_logic;                                        -- mem_we_n
			memory_mem_reset_n               : out   std_logic;                                        -- mem_reset_n
			memory_mem_dq                    : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- mem_dq
			memory_mem_dqs                   : inout std_logic                     := 'X';             -- mem_dqs
			memory_mem_dqs_n                 : inout std_logic                     := 'X';             -- mem_dqs_n
			memory_mem_odt                   : out   std_logic;                                        -- mem_odt
			memory_mem_dm                    : out   std_logic;                                        -- mem_dm
			memory_oct_rzqin                 : in    std_logic                     := 'X';             -- oct_rzqin
			reset_reset_n                    : in    std_logic                     := 'X';             -- reset_n
			sdram_master_control_done_out    : out   std_logic;                                        -- done_out
			sdram_master_control_ready_in    : in    std_logic                     := 'X';             -- ready_in
			sdram_master_debug_max_out       : out   std_logic_vector(15 downto 0);                    -- max_out
			sdram_master_debug_min_out       : out   std_logic_vector(15 downto 0);                    -- min_out
			sdram_master_debug_state_out     : out   std_logic_vector(1 downto 0);                     -- state_out
			sdram_master_debug_read_index_in : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- read_index_in
			sdram_master_debug_test_rd_wr_in : in    std_logic                     := 'X';             -- test_rd_wr_in
			sdram_wire_addr                  : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_wire_ba                    : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_wire_cas_n                 : out   std_logic;                                        -- cas_n
			sdram_wire_cke                   : out   std_logic;                                        -- cke
			sdram_wire_cs_n                  : out   std_logic;                                        -- cs_n
			sdram_wire_dq                    : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_wire_dqm                   : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_wire_ras_n                 : out   std_logic;                                        -- ras_n
			sdram_wire_we_n                  : out   std_logic                                         -- we_n
		);
	end component mysystem;

